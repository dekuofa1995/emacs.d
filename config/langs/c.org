* Header
#+begin_src emacs-lisp
  ;;; init-c.el -- Init File. -*- lexical-binding: t -*-
  ;;; Commentary:

#+end_src

* C
** Eglot
#+begin_src emacs-lisp
  (with-eval-after-load 'eglot
    (add-hook 'c-mode-hook #'eglot-ensure)
    (add-hook 'c++-mode-hook #'eglot-ensure))
#+end_src
** Org Babel
#+begin_src emacs-lisp
  (use-package ob-C
    :load-path deku/org-source-dir
    :commands (
               org-babel-execute:C
               org-babel-expand-body:C
               org-babel-execute:cpp
               org-babel-expand-body:cpp
               org-babel-execute:C++
               org-babel-expand-body:C++))
#+end_src
** Compile and Run
#+begin_src emacs-lisp
  (defun compile-and-run()
    (interactive)
    (let* ((src (file-name-nondirectory (buffer-file-name)))
           (exe (file-name-sans-extension src)))
      (compile (concat "clang " src " -o " exe) t)))

  (with-eval-after-load 'c-ts-mode
    (define-key c-ts-mode-map (kbd "C-c C-r") #'compile-and-run))
#+end_src


* Footer
#+begin_src emacs-lisp
(provide 'init-c)
;;; init-c.el ends here
#+end_src

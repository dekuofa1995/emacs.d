#+title: Org Style Configuration
* Header
#+begin_src emacs-lisp
;;; init-org-style.el -- Init File. -*- lexical-binding: t -*-
;;; Commentary:

#+end_src

* Configuration

** Org Modern
#+begin_src emacs-lisp
	(setup org-modern
	  (:hooks org-mode-hook org-modern-mode)
	  (:hooks org-agenda-finalize-hook org-modern-agenda))
#+end_src
** COMMENT Source Block Face
#+begin_src emacs-lisp
  (with-eval-after-load 'org
    ;; 获取当前主题的背景色
    (defun get-theme-background-color ()
      (cdr (assoc 'background-color (frame-parameters))))

    (defun set-org-block-end-line-color ()
      "Set org-src-block face background color to current theme's background color."
      (interactive)
      (let ((background-color (get-theme-background-color))) ; 获取当前主题的背景色
        (set-face-attribute 'org-block-end-line nil :background background-color))) ; 设置 org-src-block face 的背景色属性

    (advice-add 'load-theme :after (lambda (&rest _) (set-org-block-end-line-color))))
#+end_src
** Keywords face
#+begin_src emacs-lisp
  (setq org-todo-keyword-faces '(("TODO"    . warning)
                                 ("DOING"   . success)
                                 ("WAITING" . error)
                                 ("VERIFY"  . error)
                                 ("DONE"    . shadow)
                                 ("CANCEL"  . shadow)))
#+end_src
** Markups
#+begin_src emacs-lisp
  (setq org-hide-emphasis-markers t)

  (with-eval-after-load "org"
    (add-to-list 'org-emphasis-alist '("=" (:box (:line-width -2 :color "gray50" :style released-button) :inherit org-verbatim))))
#+end_src
* Org Sticky Header

#+begin_src emacs-lisp
  (setup org-sticky-header
    (:hooks org-mode-hook org-sticky-header-mode))
#+end_src

* Footer
#+begin_src emacs-lisp
(provide 'init-org-style)
;;; init-org-style.el ends here
#+end_src
